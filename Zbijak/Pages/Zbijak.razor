@page "/zbijak"
@using Szachy
@using System.IO
@using Helpers
@using System.Text.RegularExpressions
@inject PiecesHelper PiecesHelper
@using System.Net.Http
@inject HttpClient Http
@inject IJSRuntime js;

<h1>Zaatakowane bierki:</h1>

<h3>Do znalezienia: @zbijak.atakiDoZnalezienia.Except(zbijak.atakiZnalezione).Count()</h3>
<h3>Błędy: @zbijak.bledy</h3>

<table class="szachownica">
    <tbody>
        @for (int rzad = 1; rzad < 9; rzad++)
        {
        <tr class="rzad">
            @for (int kolumna = 1; kolumna < 9; kolumna++)
                {
                    var bierka = zbijak.szachownica.GetPole(rzad, kolumna).Bierka;
                    var klasaKoloru = zbijak.szachownica.GetPole(rzad, kolumna).Kolor == Kolor.Bialy ? "bialy" : "czarny";
                    var podglad = zbijak.bierkiZaznaczone.Contains(bierka) ? "podglad" : "";
                    var zaznaczenie = zbijak.atakiZnalezione.Contains(bierka) ? "zaznaczenie" : "";
            <td class="pole @klasaKoloru podglad zaznaczenie">
                @if (bierka != null)
                {
                <img src="@PiecesHelper.GetImageSrc(bierka)" @onclick="() => Kliknieto(bierka)" @onmousedown="args => PrzycisnietoFigure(bierka, args)" @onmouseup="args => PuszczonoFigure(bierka, args)" />
                }
            </td>
                }
        </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="dajNastepne">Następne zadanie</button>



@code {
    Szachy.Treningi.Zbijak zbijak = new Szachy.Treningi.Zbijak();

    protected override async Task OnInitializedAsync()
    {        
        Regex fenRegex = new Regex(@"([rnbqkpRNBQKP1-8]+\/){7}[rnbqkpRNBQKP1-8]+");
        var fensResponse = await Http.GetStringAsync("FENs/MateIn4.json");
        var fens = fensResponse.Split("\r\n").Where(d => fenRegex.IsMatch(d)).ToArray();
        zbijak = new Szachy.Treningi.Zbijak(fens);
    }

    private void PrzycisnietoFigure(Bierka b, MouseEventArgs mouseEventArgs)
    {

        if (mouseEventArgs.Button == 2) // prawy klawisz
        {
            zbijak.PokazBierkiZaatakoanePrzez(b);
        }
    }

    private async void PuszczonoFigure(Bierka b, MouseEventArgs mouseEventArgs)
    {
        if (mouseEventArgs.Button == 2) // prawy klawisz
        {
            zbijak.SchowajBierkiZaatakowane();
        }
    }

    private void dajNastepne()
    {
        zbijak.NastepnaRunda();
    }

    private async void Kliknieto(Bierka b)
    {
        if(zbijak.WskazanoBierke(b))
        {
            await js.InvokeVoidAsync("PlayAudioFile", "/sounds/success.mp3");
        }
        else
        {
            await js.InvokeVoidAsync("PlayAudioFile", "/sounds/failure.wav");
        }
    }
}


